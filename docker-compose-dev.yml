# docker-compose.yml

version: "3.8"
services:
  pg:
    image: postgres:13.5
    # restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=api-service-default
    volumes:
      - ./backup/:/mnt/backups/
    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    command: server /data/
    environment:
      - MINIO_ACCESS_KEY=my_access_key
      - MINIO_SECRET_KEY=my_secret_key
    ports:
      - 9000:9000
    volumes:
      - .docker/volumes/minio/:/data/

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 my_access_key my_secret_key;
      /usr/bin/mc mb myminio/giftcardfiles;
      /usr/bin/mc policy set public myminio/giftcardfiles;
      exit 0;
      "

  createbucketstest:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 my_access_key my_secret_key;
      /usr/bin/mc mb myminio/giftcardfilestest;
      /usr/bin/mc policy set public myminio/giftcardfilestest;
      exit 0;
      "

  sqs:
    working_dir: /app
    build:
      context: ./sqs_mock
    ports:
      - 9324:9324

  pgtest:
    image: postgres:13.5
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=reward-service-test

  bare: &app
    image: node:16.15.1
    working_dir: /app
    command: yarn start:dev
    build:
      context: ./api_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./api_service/:/app/
      - yarn-cache:/usr/local/share/.cache/yarn/v2
    environment:
      APP_VERSION: 0.1.0-snapshot
      PORT: 8090
      DATABASE_URL: postgres://myuser:mypassword@pg:5432/api-service-default?connect_timeout=300
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID}
      AWS_COGNITO_CLIENT_ID: ${AWS_COGNITO_CLIENT_ID}
      AWS_COGNITO_AUTHORITY: ${AWS_COGNITO_AUTHORITY}
      AWS_SES_SMTP_HOST: ${AWS_SES_SMTP_HOST}
      AWS_SES_SMTP_USERNAME: ${AWS_SES_SMTP_USERNAME}
      AWS_SES_SMTP_PASSWORD: ${AWS_SES_SMTP_PASSWORD}
      AWS_S3_ACCESS_KEY: my_access_key
      AWS_S3_SECRET_KEY: my_secret_key
      AWS_S3_BUCKET_GIFT_CARDS: ${AWS_S3_BUCKET_GIFT_CARDS}
      AWS_S3_ENDPOINT: http://minio:9000
      AWS_SQS_ENDPOINT: http://sqs:9324
      AWS_ACCESS_KEY: my_access_key
      AWS_SECRET_KEY: my_secret_key
      AWS_SQS_IGNORE_FIFO: "true"
      AWS_SQS_QUEUE_URL_USER_INVITE_IMPORT: http://sqs:9324/queue/user-invite-bulk-create
      AWS_SQS_QUEUE_URL_USER_INVITE_IMPORT_FAILED: http://sqs:9324/queue/user-invite-bulk-create-failed
      AWS_SQS_QUEUE_URL_FIRST: http://sqs:9324/queue/first-queue
      AWS_SQS_QUEUE_URL_FIRST_FAILED: http://sqs:9324/queue/dead-first-queue
      AWS_REGION: ${AWS_REGION}
      EMAIL_FROM: ${EMAIL_FROM}
      FE_BASE_URL: http://localhost:3050/

  api_full:
    <<: *app
    ports:
      - 8090:8090
    depends_on:
      - pg
      - minio
      - createbuckets
      - sqs
    links:
      - pg
      - minio
      - sqs

  client_app_bare: &fe_app # image: node:16.15.1
    working_dir: /app
    image: node:16.15.1
    command: yarn start
    build:
      context: ./client_app
      dockerfile: Dockerfile.dev
    volumes:
      - ./client_app/:/app/
      - yarn-cache-fe:/usr/local/share/.cache/yarn/v2

  client_app_full:
    <<: *fe_app
    environment:
      REACT_APP_BASE_URL: http://localhost:3050/api/
      WDS_SOCKET_PORT: 0
    ports:
      - 3000:3000

  nginx:
    depends_on:
      - api_full
      - client_app_full
    links:
      - api_full
      - client_app_full
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - 3050:80

  apitest:
    <<: *app
    ports:
      - 8800:8800
    environment:
      DATABASE_URL: postgres://test:test@pgtest:5432/reward-service-test
      AWS_S3_ACCESS_KEY: my_access_key
      AWS_S3_SECRET_KEY: my_secret_key
      AWS_S3_ENDPOINT: http://minio:9000
      AWS_SQS_ENDPOINT: http://sqs:9324
      AWS_ACCESS_KEY: my_access_key
      AWS_SECRET_KEY: my_secret_key
      AWS_SQS_QUEUE_URL_FIRST: http://sqs:9324/queue/first-queue
      AWS_SQS_QUEUE_URL_FIRST_FAILED: http://sqs:9324/queue/dead-first-queue
      AWS_SQS_QUEUE_NAME_USER_INVITE_IMPORT: test-user-invite-bulk-create
      AWS_SQS_QUEUE_URL_USER_INVITE_IMPORT: http://sqs:9324/queue/test-user-invite-bulk-create
      AWS_SQS_QUEUE_NAME_USER_INVITE_IMPORT_FAILED: test-user-invite-bulk-create-failed
      AWS_SQS_QUEUE_URL_USER_INVITE_IMPORT_FAILED: http://sqs:9324/queue/test-user-invite-bulk-create-failed
      AWS_S3_BUCKET_GIFT_CARDS: giftcardfilestest
    depends_on:
      - pgtest
      - minio
      - sqs
      - createbucketstest

  unit_test:
    image: node:16.15.1
    working_dir: /app
    command: yarn test
    build:
      context: ./api_service
      dockerfile: Dockerfile.unit
    volumes:
      - ./api_service/:/app/
    environment:
      APP_VERSION: 0.1.0-snapshot
      PORT: 8090

volumes:
  yarn-cache: { external: true }
  yarn-cache-fe: { external: true }
